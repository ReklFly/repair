package com.wtf.user.config;import com.alibaba.fastjson.JSONArray;import com.wtf.user.entity.dto.UserRedis;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.core.MethodParameter;import org.springframework.data.redis.core.RedisTemplate;import org.springframework.web.bind.support.WebDataBinderFactory;import org.springframework.web.context.request.NativeWebRequest;import org.springframework.web.method.support.HandlerMethodArgumentResolver;import org.springframework.web.method.support.ModelAndViewContainer;import javax.servlet.http.HttpServletRequest;/** * @author wangtengfei * @since 2020/4/8 14:06 */@Slf4jpublic class UserInfoHandlerMethodArgResolver implements HandlerMethodArgumentResolver {    @Autowired    private RedisTemplate redisTemplate;    @Override    public boolean supportsParameter(MethodParameter methodParameter) {        return methodParameter.getParameterAnnotation(UserInfo.class) != null && methodParameter.getParameterType() == UserRedis.class;    }    @Override    public Object resolveArgument(MethodParameter methodParameter, ModelAndViewContainer modelAndViewContainer, NativeWebRequest nativeWebRequest, WebDataBinderFactory webDataBinderFactory) throws Exception {        CurrentUser currentUserAnnotation = methodParameter.getParameterAnnotation(CurrentUser.class);        Object obj = redisTemplate.opsForValue().get(currentUserAnnotation);        if(obj!=null) {            UserRedis userRedis1 = JSONArray.parseObject(obj.toString(), UserRedis.class);            System.out.println(userRedis1);            log.info("><[用户信息]==" + userRedis1);            return userRedis1;        }        return  null;    }}