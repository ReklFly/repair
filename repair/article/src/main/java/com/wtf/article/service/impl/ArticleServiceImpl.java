package com.wtf.article.service.impl;import com.github.pagehelper.PageInfo;import com.google.common.collect.Lists;import com.wtf.article.entity.po.ArticlePO;import com.wtf.article.entity.po.ArticlePOExample;import com.wtf.article.entity.user.User;import com.wtf.article.entity.vo.ArticleVO;import com.wtf.article.mapper.ArticlePOMapper;import com.wtf.article.service.ArticleService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.text.ParseException;import java.text.SimpleDateFormat;import java.util.Date;import java.util.List;/** * @author wangtengfei * @since 2020/3/24 13:55 */@Servicepublic class ArticleServiceImpl implements ArticleService {	@Autowired	private ArticlePOMapper articlePOMapper;	@Override	public Integer insertArticle(ArticlePO articlePO, User user) {		articlePO.setAuthor(user.getSurname()+user.getName());		//TODO 通知管理员审核		return articlePOMapper.insertSelective(articlePO);	}	@Override	public Integer checkArticle(ArticlePO articlePO,Integer check) {		if(check==1){			articlePO.setCheckPass(check);			return articlePOMapper.updateByPrimaryKeySelective(articlePO);		}		//TODO 发送给作者不通过		return null;	}	@Override	public PageInfo<ArticleVO> selectALLArticle(Integer category) {		PageInfo<ArticleVO> pageInfo=new PageInfo();		List<ArticlePO> articles=articlePOMapper.getArticle(category);		List<ArticleVO> articleVOList= Lists.newArrayList();		articles.parallelStream().forEach(x->{			ArticleVO a=new ArticleVO();			a.setId(x.getId());			a.setTitle(x.getTitle());			a.setImgPath(x.getImgPath());			a.setAuthor(x.getAuthor());			a.setAuthorAccount(x.getAuthorAccount());			a.setCategory(x.getCategory());			a.setCategoryName(x.getCategoryName());			a.setCreateTime(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(x.getCreateTime()));			articleVOList.add(a);		});		pageInfo.setList(articleVOList);		return pageInfo;	}	@Override	public ArticleVO selectDetail(Integer id) {		ArticlePO x=articlePOMapper.selectByPrimaryKey(id);		ArticleVO a=new ArticleVO();		a.setId(x.getId());		a.setTitle(x.getTitle());		a.setImgPath(x.getImgPath());		a.setAuthor(x.getAuthor());		a.setAuthorAccount(x.getAuthorAccount());		a.setCategory(x.getCategory());		a.setCategoryName(x.getCategoryName());		a.setCreateTime(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(x.getCreateTime()));		a.setContent(x.getContent());		a.setUpdateTime(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(x.getUpdateTime()));		return a;	}}